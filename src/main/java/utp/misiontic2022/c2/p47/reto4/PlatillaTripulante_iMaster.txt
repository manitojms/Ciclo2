/*
 * Pueda usar esta plantilla para la carga del reto a iMaster
 * Copie las clases de los paquetes Modelo, Vista, Controlador y Util
 * No incluya los import de los archivos .java solo las clases
 */
// Importaciones necesarias en iMaster
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;

// Util (No modificar)
class JDBCUtilities {
    private static final String DATABASE_LOCATION = "ProyectosConstruccion.db";

    public static Connection getConnection() throws SQLException {
        String url = "jdbc:sqlite:"+DATABASE_LOCATION;

        return DriverManager.getConnection(url);
    }
}

// Remplace en adelante por las clases de sus archivos .java

// Vista
class VistaRequerimientosReto4 {
     public static final ControladorRequerimientos controlador = new ControladorRequerimientos();

    public static void requerimiento1(){
        try {
            System.out.println("Conocer el id de las compras que si estén pagadas");
            ArrayList<Compras> resultado = controlador.consultarRequerimiento1();
            System.out.println("ID_Compra");
            for(Compras compras:resultado){
                System.out.println(compras.getID_Compra()+" ");
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento2(){
        try {
            System.out.println("Conocer el id de todas las compras cuyo precio por unidad de su material de construcción sea inferior a 1100");
            ArrayList<Compras2> resultado = controlador.consultarRequerimiento2();
            System.out.println("ID_Compra");
            for(Compras2 compras:resultado){
                System.out.println(compras.getID_Compra());
                /*System.out.println(compras.getProveedor());*/
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }

    public static void requerimiento3(){
        try {
            System.out.println("Obtener el id de la compra y el año de las compras pagadas parcialmente y en el mes '02'");
            ArrayList<Compras3> resultado = controlador.consultarRequerimiento3();
            System.out.println("Id_Proyecto fecha");
            for(Compras3 compritas:resultado){
                System.out.print(compritas.getID_Compra()+" ");
                System.out.println(compritas.getFecha());
            }
        } catch (Exception e) {
            System.err.println(e);
        }
    }
}

// Controlador
class ControladorRequerimientos {
    ComprasDao dao = new ComprasDao();
    Compras2Dao dao2 = new Compras2Dao();
    Compras3Dao dao3 = new Compras3Dao();
    
    public ArrayList<Compras> consultarRequerimiento1() throws SQLException {
        return dao.compraspagadas();
    }
    
    public ArrayList<Compras2> consultarRequerimiento2() throws SQLException {
        return dao2.comprasp();
    }

   
    public ArrayList<Compras3> consultarRequerimiento3() throws SQLException {
        return dao3.comprasfecha();
    }
}

// Modelo
// VO
public class Compras {
    private int ID_Compra;
    private String Proveedor;
    private String Pagado;

    public int getID_Compra() {
        return ID_Compra;
    }

    public void setID_Compra(int iD_Compra) {
        ID_Compra = iD_Compra;
    }

    public String getProveedor() {
        return Proveedor;
    }

    public void setProveedor(String proveedor) {
        Proveedor = proveedor;
    }

    public String getPagado() {
        return Pagado;
    }

    public void setPagado(String pagado) {
        Pagado = pagado;
    }

}

public class Compras2 {
    private int ID_Compra;
    private int Precio_Unidad;

    public int getID_Compra() {
        return ID_Compra;
    }

    public void setID_Compra(int iD_Compra) {
        ID_Compra = iD_Compra;
    }

    public int getPrecio_Unidad() {
        return Precio_Unidad;
    }

    public void setPrecio_Unidad(int precio_Unidad) {
        Precio_Unidad = precio_Unidad;
    }
}

public class Compras3 {
    private int ID_Compra;
    private  int fecha;
    private int STRFTIME;

    public void setFecha(int fecha) {
        this.fecha = fecha;
    }

    public int getFecha() {
        return fecha;
    }

    public void setID_Compra(int iD_Compra) {
        ID_Compra = iD_Compra;
    }

    public int getID_Compra() {
        return ID_Compra;
    }

    public void setSTRFTIME(int sTRFTIME) {
        STRFTIME = sTRFTIME;
    }

    public int getSTRFTIME() {
        return STRFTIME;
    }
}

// DAO
public class ComprasDao {

    Connection conexion;

    public ComprasDao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    public ArrayList<Compras> compraspagadas() throws SQLException {
        ArrayList<Compras> lista = new ArrayList<Compras>();
        String sql = "SELECT ID_Compra FROM Compra c WHERE Pagado = 'No' AND Proveedor = 'JUMBO'";
        Statement stmt = conexion.createStatement();
        ResultSet resultado = stmt.executeQuery(sql);
        while(resultado.next()){
            Compras compra = new Compras();
            compra.setID_Compra(resultado.getInt(1));
            lista.add(compra);
        }
        return lista;
    }
    public ArrayList<Compras2> comprasp() {
        return null;
    }
}

public class Compras2Dao {
    Connection conexion;

    public Compras2Dao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    public ArrayList<Compras2> comprasp() throws SQLException {
        ArrayList<Compras2> lista = new ArrayList<Compras2>();
        String sql = "SELECT ID_Compra FROM Compra JOIN MaterialConstruccion USING (ID_MaterialConstruccion) WHERE Precio_Unidad < 1100";
        Statement stmt = conexion.createStatement();
        ResultSet resultado = stmt.executeQuery(sql);
        while(resultado.next()){
            Compras2 compra = new Compras2();
            compra.setID_Compra(resultado.getInt(1));
            /*.setProveedor(resultado.getString(2));*/
            lista.add(compra);
        }
        return lista;
    }
}

public class Compras3Dao {
    Connection conexion;
    private boolean add;

    public Compras3Dao(){
        try {
            conexion = JDBCUtilities.getConnection();
        } catch (SQLException e) {
            // TODO Auto-generated catch block
            e.printStackTrace();
        }
    }
    public ArrayList<Compras3> comprasfecha() throws SQLException {
        ArrayList<Compras3> lista = new ArrayList<Compras3>();
        String string = "SELECT ID_Proyecto, STRFTIME('%Y',Fecha ) FROM Compra WHERE Pagado = 'Parcialmente' AND STRFTIME('%m',Fecha) = '02'";
        String sql = string;
        Statement stmt = conexion.createStatement();
        ResultSet resultado = stmt.executeQuery(sql);
        while(resultado.next()){
            Compras3 comprita = new Compras3();
            comprita.setID_Compra(resultado.getInt(1));
            comprita.setFecha(resultado.getInt(2));
            lista.add(comprita);
        }
        return lista;
    }
}